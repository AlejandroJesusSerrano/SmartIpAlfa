# Generated by Django 4.1.7 on 2023-03-13 11:44

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('devmanager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_code', models.CharField(max_length=7, verbose_name='Codigo Postal')),
                ('neightbordhood', models.CharField(max_length=45, verbose_name='Barrio')),
                ('address', models.CharField(max_length=100, verbose_name='Direccion')),
                ('floor', models.CharField(blank=True, max_length=4, null=True, verbose_name='Piso')),
            ],
            options={
                'verbose_name': 'Domicilio',
                'verbose_name_plural': 'Domicilios',
                'db_table': 'Domicilio',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_ip', models.BooleanField()),
                ('last_review', models.DateField()),
                ('maintenment', models.TextField()),
                ('pendings_repairs', models.CharField(max_length=45, verbose_name='Reparaciones Pendientes')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_brand', to='devmanager.model')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_device_type', to='devmanager.model')),
            ],
        ),
        migrations.CreateModel(
            name='DevStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=25, verbose_name='Estado del Dispositivo')),
                ('function_status', models.CharField(max_length=25, verbose_name='Estado Funcional del Dispositivo')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'db_table': 'EstadosDispositivos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='IAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internet_access', models.CharField(max_length=20, verbose_name='Tipo de Acceso a Internet')),
            ],
            options={
                'verbose_name': 'Acceso a Internet',
                'verbose_name_plural': 'Tipos de Acceso a Internet',
                'db_table': 'Internet',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('province', models.CharField(max_length=45, verbose_name='Provincia')),
            ],
            options={
                'verbose_name': 'Provincia',
                'verbose_name_plural': 'Provincias',
                'db_table': 'Provincias',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Techs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Nombre del Tecnico')),
                ('last_name', models.CharField(max_length=45, verbose_name='Apellido del Tecnico')),
            ],
            options={
                'verbose_name': 'Tecnico',
                'verbose_name_plural': 'Tecnicos',
                'db_table': 'Tecnicos',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office', models.CharField(max_length=45, verbose_name='Oficina')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_address', to='devmanager.address')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='office_floor', to='devmanager.address')),
            ],
            options={
                'verbose_name': 'Oficina',
                'verbose_name_plural': 'Oficinas',
                'db_table': 'Oficina',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locality', models.CharField(max_length=45, verbose_name='Localidad')),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locality_province', to='devmanager.province')),
            ],
            options={
                'verbose_name': 'Localidad',
                'verbose_name_plural': 'Localidades',
                'db_table': 'Localidades',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Ip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=15, verbose_name='Ip')),
                ('i_access', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='i_access', to='devmanager.iaccess')),
            ],
            options={
                'verbose_name': 'Ip',
                'verbose_name_plural': 'Ips',
                'db_table': 'Ip',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DevUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dev_user_name', models.CharField(max_length=45, verbose_name='Nombre del Usuario de Dispositivo')),
                ('dev_user_last_name', models.CharField(max_length=45, verbose_name='Apellido del Usuario de Dispositivo')),
                ('cuil', models.CharField(max_length=11, verbose_name='CUIL')),
                ('msg_account', models.CharField(max_length=15, verbose_name='Nombre de Usuario de Mensajeria')),
                ('msg_password', models.CharField(max_length=16, verbose_name='Contraseña Mensajeria')),
                ('username', models.CharField(max_length=6, verbose_name='Nombre de Usuario')),
                ('typical_password', models.BooleanField()),
                ('password', models.CharField(max_length=25, verbose_name='Contraseña')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dev_user_devices', to='devmanager.devices')),
            ],
        ),
        migrations.AddField(
            model_name='devices',
            name='func_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_functional_status', to='devmanager.devstatus'),
        ),
        migrations.AddField(
            model_name='devices',
            name='i_access',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_i_access', to='devmanager.ip'),
        ),
        migrations.AddField(
            model_name='devices',
            name='img',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_img', to='devmanager.model'),
        ),
        migrations.AddField(
            model_name='devices',
            name='ip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_ip', to='devmanager.ip'),
        ),
        migrations.AddField(
            model_name='devices',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_model', to='devmanager.model'),
        ),
        migrations.AddField(
            model_name='devices',
            name='office',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_office', to='devmanager.office'),
        ),
        migrations.AddField(
            model_name='devices',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_status', to='devmanager.devstatus'),
        ),
        migrations.AddField(
            model_name='devices',
            name='tech',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices_tech', to='devmanager.techs'),
        ),
        migrations.AddField(
            model_name='address',
            name='locality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_locality', to='devmanager.locality'),
        ),
        migrations.AddField(
            model_name='address',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_province', to='devmanager.locality'),
        ),
    ]
